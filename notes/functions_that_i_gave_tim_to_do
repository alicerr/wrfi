tim
//takes in a start and end time in string form, and a set id. If this show conflicts with any other (excluding itself, if the id is not 0) shows, ofr if the end is less than the start it should return false after using print_error_message($msg) to tell the user what shows conflict with it (show names and start times). Otherwise it should return true. Assume that start and end may be null, and treat these as another user error.
does_not_cross($start, $end, $set_id)

hash_password($password) : string -> string
salts and hashes a password.



is_set_user($set_id) int -> string
if a user is assiociated with sets show this returns the show name, else null

get_user_by_email($email) email -> user_id

can_edit_at_time($start) time -> set_id

track_id($track_name, $album_name, $artist_name) (string, string, string)->track_id 
finds any matches on these criteria. If album name or artist name is null in either the database or the incoming feilds the null catagory is considered a match. 

color_track(start); time string -> sting
takes in a track start time and returns <div class = "error_type">error type</div> (can be no error)

warn_track($track)
takes in a track record and returns a string describing the problem with the track, as well as the track start, set start, track name, and show name.
null if no error



warn_set($set_id)
takes in a set_id, queries the user table to get an email address, fname, lname, show name. Composes a missive with a description of the problem as well as any tracks in the set that have a problem.
uses function email($subject, $contents, $address, $user_name) to send the email. Expect that multiple users will be associated with the show and multiple emails should be sent.
feel free to query get_session($dj_name) to sign the letter.

color_set(start); time string -> sting
takes in a track start time and returns <div class = "error_type cell">error type</div> (can be no error)<div class = "email_report cell"><form method = "post"><input type="text" class = "hide" value = "$set_id" name = "set_id"><input type = "submit" value = "email" name = "email"> </form> </div>

user_list($show_name)
generates a list of users (fname, lname) and email addresses associated with a show. outputs in for <p> fname, lname, email</p>

login()
quireis jackies post data to log user in while recoording:

user_id : int
user_level : int
user_shows : array
dj_names : array
dj_ids : array
current_dj_name : (pick one, or use the last one the dj entered a track with)
current_dj_id : int, as above


reload()
{
	queries get_session($reload), if set reloads login features w/o logging out
}

logout()
unset session variables (can use unset_session("variable"))
or however.







VEIW FUNCIONS
load_dj_options(){

	$dj_names = get_session($dj_names);
	foreach($dj_names as $name)
		echo("<option value='$name[0]'>$name[1]</option>");
}